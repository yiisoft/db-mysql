on:
  pull_request:
    paths:
      - 'src/**'
      - 'tests/**'
      - '.github/workflows/ansi-mode.yml'
      - 'composer.json'
      - 'phpunit.xml.dist'

  push:
    branches: ['master']
    paths:
      - 'src/**'
      - 'tests/**'
      - '.github/workflows/ansi-mode.yml'
      - 'composer.json'
      - 'phpunit.xml.dist'

name: ansi-mode

jobs:
  tests:
    name: PHP ${{ matrix.php }}-${{ matrix.mysql }}

    env:
      COMPOSER_ROOT_VERSION: 1.0.0
      EXTENSIONS: pdo, pdo_mysql

    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os:
          - ubuntu-latest

        php:
          - 8.3

        mysql:
          - mysql:latest

    services:
      mysql:
        image: ${{ matrix.mysql }}
        env:
          MYSQL_ALLOW_EMPTY_PASSWORD: true
          MYSQL_PASSWORD: ''
          MYSQL_DATABASE: yiitest
        ports:
          - 3306:3306
        options: --name=mysql_ansi --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3

    steps:
      - name: Change mysql sql_mode.
        run: docker exec mysql_ansi mysql -u root -e "SET GLOBAL sql_mode = 'ANSI';"

      - name: Checkout.
        uses: actions/checkout@v3

      - name: Install PHP with extensions.
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php }}
          extensions: ${{ env.EXTENSIONS }}
          ini-values: date.timezone='UTC'
          coverage: pcov

      - name: Update composer.
        run: composer self-update

      - name: Set environment variables pull request linux.
        uses: yiisoft/actions/db/environment-linux@master

      - name: Install db.
        uses: yiisoft/actions/db/subpackage-install@master
        with:
          BRANCH_NAME: ${{ env.BRANCH_NAME }}
          COMPOSER_ROOT_VERSION: ${{ env.COMPOSER_ROOT_VERSION }}
          CURRENT_PACKAGE: db
          FULL_BRANCH_NAME: ${{ env.FULL_BRANCH_NAME }}
          WORK_PACKAGE_URL: ${{ env.WORK_PACKAGE_URL }}

      - name: Install dependencies with composer.
        run: composer update --no-interaction --no-progress --optimize-autoloader --ansi

      - name: Run tests with phpunit with code coverage.
        run: vendor/bin/phpunit --coverage-clover=coverage.xml --colors=always --display-warnings --display-deprecations
        env:
          YII_MYSQL_DATABASE: yiitest
          YII_MYSQL_HOST: 127.0.0.1
          YII_MYSQL_PORT: 3306
          YII_MYSQL_USER: root
          YII_MYSQL_PASSWORD: ''

      - name: Upload coverage to Codecov.
        uses: codecov/codecov-action@v3
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: ./coverage.xml
